	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"main.cpp"
	.section	.text._Z3nowv,"ax",%progbits
	.align	1
	.global	_Z3nowv
	.code	16
	.thumb_func
	.type	_Z3nowv, %function
_Z3nowv:
	ldr	r3, .L4
	push	{r4, r5, r6, r7, lr}
	ldr	r0, [r3, #8]
	ldr	r3, .L4+4
	mvn	r0, r0
	ldr	r1, [r3]
	lsl	r0, r0, #8
	mov	r2, r3
	lsr	r0, r0, #8
	ldr	r3, .L4+8
	cmp	r0, r1
	bcs	.L2
	ldr	r6, [r3]
	ldr	r7, [r3, #4]
	mov	r4, #128
	mov	r5, #0
	lsl	r4, r4, #17
	add	r4, r4, r6
	adc	r5, r5, r7
	str	r4, [r3]
	str	r5, [r3, #4]
.L2:
	str	r0, [r2]
	ldr	r2, [r3]
	ldr	r1, [r3, #4]
	orr	r0, r2
	@ sp needed
	pop	{r4, r5, r6, r7, pc}
.L5:
	.align	2
.L4:
	.word	-536813552
	.word	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low
	.word	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high
	.size	_Z3nowv, .-_Z3nowv
	.section	.text._ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv,"axG",%progbits,_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv,comdat
	.align	1
	.weak	_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv
	.code	16
	.thumb_func
	.type	_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv, %function
_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv:
	push	{r3, r4, r5, lr}
	ldr	r2, .L15
	ldr	r3, .L15+4
	ldr	r5, .L15+8
	str	r2, [r3, #56]
	ldr	r3, .L15+12
	ldr	r2, .L15+16
	str	r3, [r5]
	ldr	r3, .L15+20
	ldr	r4, .L15+24
	str	r2, [r3, #56]
	ldr	r3, .L15+28
	str	r3, [r4]
.L7:
	bl	_Z3nowv
	ldr	r3, .L15+32
	ldr	r2, [r3, #4]
	cmp	r2, r1
	bgt	.L8
	bne	.L12
	ldr	r3, [r3]
	cmp	r3, r0
	bhi	.L8
.L12:
	ldr	r0, .L15+36
	ldr	r1, [r5]
	b	.L14
.L8:
	bl	_Z3nowv
	ldr	r3, .L15+40
	ldr	r2, [r3, #4]
	cmp	r2, r1
	bgt	.L7
	bne	.L13
	ldr	r3, [r3]
	cmp	r3, r0
	bhi	.L7
.L13:
	ldr	r0, .L15+36
	ldr	r1, [r4]
.L14:
	bl	switch_from_to
	b	.L7
.L16:
	.align	2
.L15:
	.word	_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv
	.word	_ZN4taskILi1ELi15EE5stackE
	.word	_ZN4taskILi1ELi15EE7task_spE
	.word	_ZN4taskILi1ELi15EE5stackE+20
	.word	_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv
	.word	_ZN4taskILi2ELi15EE5stackE
	.word	_ZN4taskILi2ELi15EE7task_spE
	.word	_ZN4taskILi2ELi15EE5stackE+20
	.word	_ZN4taskILi1ELi15EE6wakeupE
	.word	.LANCHOR0
	.word	_ZN4taskILi2ELi15EE6wakeupE
	.size	_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv, .-_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv
	.weak	_ZN9schedulerIJ5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv
	.thumb_set _ZN9schedulerIJ5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv,_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv
	.section	.text.startup.main,"ax",%progbits
	.align	1
	.global	main
	.code	16
	.thumb_func
	.type	main, %function
main:
	mov	r2, #0
	push	{r3, lr}
	ldr	r1, .L18
	ldr	r3, .L18+4
	str	r2, [r3]
	str	r1, [r3, #4]
	str	r2, [r3, #8]
	add	r2, r2, #1
	str	r2, [r3]
	bl	_ZN9schedulerII5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EES0_ILi2ENS3_17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EEEE3runEv
.L19:
	.align	2
.L18:
	.word	16777215
	.word	-536813552
	.size	main, .-main
	.section	.text._ZN4taskILi1ELi15EE4waitEx,"axG",%progbits,_ZN4taskILi1ELi15EE4waitEx,comdat
	.align	1
	.weak	_ZN4taskILi1ELi15EE4waitEx
	.code	16
	.thumb_func
	.type	_ZN4taskILi1ELi15EE4waitEx, %function
_ZN4taskILi1ELi15EE4waitEx:
	push	{r3, r4, r5, lr}
	mov	r4, r0
	mov	r5, r1
	bl	_Z3nowv
	add	r4, r4, r0
	adc	r5, r5, r1
	ldr	r3, .L21
	ldr	r0, .L21+4
	str	r4, [r3]
	str	r5, [r3, #4]
	ldr	r3, .L21+8
	@ sp needed
	ldr	r1, [r3]
	bl	switch_from_to
	pop	{r3, r4, r5, pc}
.L22:
	.align	2
.L21:
	.word	_ZN4taskILi1ELi15EE6wakeupE
	.word	_ZN4taskILi1ELi15EE7task_spE
	.word	.LANCHOR0
	.size	_ZN4taskILi1ELi15EE4waitEx, .-_ZN4taskILi1ELi15EE4waitEx
	.section	.text.startup._ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv,"axG",%progbits,_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv,comdat
	.align	1
	.weak	_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv
	.code	16
	.thumb_func
	.type	_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv, %function
_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv:
	mov	r1, #128
	ldr	r2, .L25
	lsl	r1, r1, #9
	ldr	r3, [r2, #124]
	push	{r4, lr}
	orr	r3, r1
	mov	r1, #7
	str	r3, [r2, #124]
	ldr	r2, .L25+4
	ldr	r3, [r2]
	bic	r3, r1
	add	r1, r1, #121
	orr	r3, r1
	str	r3, [r2]
	ldr	r2, .L25+8
	sub	r1, r1, #112
	ldr	r3, [r2]
	orr	r3, r1
	str	r3, [r2]
.L24:
	mov	r3, #1
	ldr	r4, .L25+12
	neg	r3, r3
	str	r3, [r4]
	ldr	r0, .L25+16
	mov	r1, #0
	bl	_ZN4taskILi1ELi15EE4waitEx
	mov	r3, #0
	ldr	r0, .L25+16
	str	r3, [r4]
	mov	r1, #0
	bl	_ZN4taskILi1ELi15EE4waitEx
	b	.L24
.L26:
	.align	2
.L25:
	.word	1074036740
	.word	1074020500
	.word	1342275584
	.word	1342242880
	.word	1200000
	.size	_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv, .-_ZN5blinkILi1EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE20pin_in_out_ad_pullupILi1ELi4ELi5EEELi15ELx1200000EE4mainEv
	.section	.text._ZN4taskILi2ELi15EE4waitEx,"axG",%progbits,_ZN4taskILi2ELi15EE4waitEx,comdat
	.align	1
	.weak	_ZN4taskILi2ELi15EE4waitEx
	.code	16
	.thumb_func
	.type	_ZN4taskILi2ELi15EE4waitEx, %function
_ZN4taskILi2ELi15EE4waitEx:
	push	{r3, r4, r5, lr}
	mov	r4, r0
	mov	r5, r1
	bl	_Z3nowv
	add	r4, r4, r0
	adc	r5, r5, r1
	ldr	r3, .L28
	ldr	r0, .L28+4
	str	r4, [r3]
	str	r5, [r3, #4]
	ldr	r3, .L28+8
	@ sp needed
	ldr	r1, [r3]
	bl	switch_from_to
	pop	{r3, r4, r5, pc}
.L29:
	.align	2
.L28:
	.word	_ZN4taskILi2ELi15EE6wakeupE
	.word	_ZN4taskILi2ELi15EE7task_spE
	.word	.LANCHOR0
	.size	_ZN4taskILi2ELi15EE4waitEx, .-_ZN4taskILi2ELi15EE4waitEx
	.section	.text.startup._ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv,"axG",%progbits,_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv,comdat
	.align	1
	.weak	_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv
	.code	16
	.thumb_func
	.type	_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv, %function
_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv:
	mov	r1, #128
	ldr	r2, .L32
	lsl	r1, r1, #9
	ldr	r3, [r2, #124]
	push	{r4, lr}
	orr	r3, r1
	mov	r1, #7
	str	r3, [r2, #124]
	ldr	r2, .L32+4
	ldr	r3, [r2]
	bic	r3, r1
	str	r3, [r2]
	ldr	r2, .L32+8
	add	r1, r1, #25
	ldr	r3, [r2]
	orr	r3, r1
	str	r3, [r2]
.L31:
	mov	r3, #1
	ldr	r4, .L32+12
	neg	r3, r3
	str	r3, [r4]
	ldr	r0, .L32+16
	mov	r1, #0
	bl	_ZN4taskILi2ELi15EE4waitEx
	mov	r3, #0
	ldr	r0, .L32+16
	str	r3, [r4]
	mov	r1, #0
	bl	_ZN4taskILi2ELi15EE4waitEx
	b	.L31
.L33:
	.align	2
.L32:
	.word	1074036740
	.word	1074020512
	.word	1342275584
	.word	1342242944
	.word	1800000
	.size	_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv, .-_ZN5blinkILi2EN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELi15ELx1800000EE4mainEv
	.weak	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high
	.section	.bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high,"awG",%nobits,_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high,comdat
	.align	3
	.type	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high, %object
	.size	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high, 8
_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high:
	.space	8
	.weak	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low
	.section	.bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low,"awG",%nobits,_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low,comdat
	.align	2
	.type	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low, %object
	.size	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low, 4
_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low:
	.space	4
	.weak	_ZN4taskILi2ELi15EE6wakeupE
	.section	.bss._ZN4taskILi2ELi15EE6wakeupE,"awG",%nobits,_ZN4taskILi2ELi15EE6wakeupE,comdat
	.align	3
	.type	_ZN4taskILi2ELi15EE6wakeupE, %object
	.size	_ZN4taskILi2ELi15EE6wakeupE, 8
_ZN4taskILi2ELi15EE6wakeupE:
	.space	8
	.weak	_ZN4taskILi2ELi15EE7task_spE
	.section	.bss._ZN4taskILi2ELi15EE7task_spE,"awG",%nobits,_ZN4taskILi2ELi15EE7task_spE,comdat
	.align	2
	.type	_ZN4taskILi2ELi15EE7task_spE, %object
	.size	_ZN4taskILi2ELi15EE7task_spE, 4
_ZN4taskILi2ELi15EE7task_spE:
	.space	4
	.weak	_ZN4taskILi2ELi15EE5stackE
	.section	.bss._ZN4taskILi2ELi15EE5stackE,"awG",%nobits,_ZN4taskILi2ELi15EE5stackE,comdat
	.align	2
	.type	_ZN4taskILi2ELi15EE5stackE, %object
	.size	_ZN4taskILi2ELi15EE5stackE, 60
_ZN4taskILi2ELi15EE5stackE:
	.space	60
	.weak	_ZN4taskILi1ELi15EE6wakeupE
	.section	.bss._ZN4taskILi1ELi15EE6wakeupE,"awG",%nobits,_ZN4taskILi1ELi15EE6wakeupE,comdat
	.align	3
	.type	_ZN4taskILi1ELi15EE6wakeupE, %object
	.size	_ZN4taskILi1ELi15EE6wakeupE, 8
_ZN4taskILi1ELi15EE6wakeupE:
	.space	8
	.weak	_ZN4taskILi1ELi15EE7task_spE
	.section	.bss._ZN4taskILi1ELi15EE7task_spE,"awG",%nobits,_ZN4taskILi1ELi15EE7task_spE,comdat
	.align	2
	.type	_ZN4taskILi1ELi15EE7task_spE, %object
	.size	_ZN4taskILi1ELi15EE7task_spE, 4
_ZN4taskILi1ELi15EE7task_spE:
	.space	4
	.weak	_ZN4taskILi1ELi15EE5stackE
	.section	.bss._ZN4taskILi1ELi15EE5stackE,"awG",%nobits,_ZN4taskILi1ELi15EE5stackE,comdat
	.align	2
	.type	_ZN4taskILi1ELi15EE5stackE, %object
	.size	_ZN4taskILi1ELi15EE5stackE, 60
_ZN4taskILi1ELi15EE5stackE:
	.space	60
	.global	main_sp
	.weak	_ZN5hwcpp2io4coutE
	.section	.data._ZN5hwcpp2io4coutE,"aw",%progbits
	.align	2
	.type	_ZN5hwcpp2io4coutE, %object
	.size	_ZN5hwcpp2io4coutE, 20
_ZN5hwcpp2io4coutE:
	.word	0
	.word	10
	.byte	32
	.byte	65
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.space	2
	.word	0
	.section	.bss.main_sp,"aw",%nobits
	.align	2
	.set	.LANCHOR0,. + 0
	.type	main_sp, %object
	.size	main_sp, 4
main_sp:
	.space	4
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
