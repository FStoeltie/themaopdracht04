
main.elf:     file format elf32-littlearm
main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000025

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x0000007c memsz 0x0000007c flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007c  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stack        00000800  10000000  10000000  00010000  2**0
                  ALLOC
  2 .ARM.attributes 0000002d  00000000  00000000  0000807c  2**0
                  CONTENTS, READONLY
  3 .comment      00000070  00000000  00000000  000080a9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 bmptk_cortex.c
00000000 l     O .text	00000020 _ZL9__vectors
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
00000000 l       *ABS*	00000000 __data_size
10001000 l       *ABS*	00000000 __ram_end
0000007c l       .stack	00000000 __exidx_end
0000007c l       .stack	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
10001000 l       *ABS*	00000000 __heap_end
00001000 l       *ABS*	00000000 __ram_size
10000800 l       .stack	00000000 __heap_start
00000000 l       .text	00000000 __rom_start
00000800 l       *ABS*	00000000 __main_stack_size
00000000 g       .text	00000000 __text_start
10000800 g       .stack	00000000 __process_stack_end
00000000 g       *ABS*	00000000 __data_init_size
10000800 g       .stack	00000000 __process_stack_start
0000007c g       *ABS*	00000000 __data_init_start
10000800 g       .stack	00000000 __main_stack_end
10000000 g       .stack	00000000 __bss_end
10000000 g       .stack	00000000 __stack_start
10000000 g       .stack	00000000 __data_end
00000024 g     F .text	00000058 __startup
10000800 g       .stack	00000000 __stack_end
0000007c g       .text	00000000 __text_end
10000000 g       .text	00000000 __bss_start
00000020 g     F .text	00000004 main
10000000 g       .stack	00000000 __main_stack_start
10000000 g       .text	00000000 __data_start


