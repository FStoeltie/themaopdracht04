	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"bmptk_cortex.c"
	.section	.text.__startup,"ax",%progbits
	.align	1
	.global	__startup
	.code	16
	.thumb_func
	.type	__startup, %function
__startup:
	mov	r2, #0
	ldr	r1, .L10
	ldr	r3, .L10+4
	push	{r4, lr}
	sub	r3, r3, r1
	lsr	r3, r3, #2
	add	r3, r3, #1
	lsl	r3, r3, #2
.L2:
	add	r0, r2, #4
	cmp	r0, r3
	beq	.L8
	mov	r4, #0
	add	r2, r1, r2
	str	r4, [r2]
	mov	r2, r0
	b	.L2
.L8:
	mov	r2, #0
	ldr	r1, .L10+8
	ldr	r3, .L10+12
	sub	r3, r3, r1
	lsr	r3, r3, #2
	add	r3, r3, #1
	lsl	r3, r3, #2
.L4:
	add	r0, r2, #4
	cmp	r0, r3
	beq	.L9
	ldr	r4, .L10+16
	ldr	r4, [r4, r2]
	str	r4, [r1, r2]
	mov	r2, r0
	b	.L4
.L9:
	bl	main
.L6:
	b	.L6
.L11:
	.align	2
.L10:
	.word	__bss_start
	.word	__bss_end
	.word	__data_start
	.word	__data_end
	.word	__data_init_start
	.size	__startup, .-__startup
	.section	.text.malloc,"ax",%progbits
	.align	1
	.global	malloc
	.code	16
	.thumb_func
	.type	malloc, %function
malloc:
	add	r0, r0, #3
	asr	r3, r0, #31
	ldr	r1, .L15
	lsr	r3, r3, #30
	add	r3, r3, r0
	ldr	r2, [r1]
	asr	r3, r3, #2
	lsl	r3, r3, #2
	add	r3, r2, r3
	str	r3, [r1]
	ldr	r1, .L15+4
	mov	r0, #0
	cmp	r3, r1
	bhi	.L13
	mov	r0, r2
.L13:
	@ sp needed
	bx	lr
.L16:
	.align	2
.L15:
	.word	.LANCHOR0
	.word	__heap_end
	.size	malloc, .-malloc
	.section	.text.__cxa_pure_virtual,"ax",%progbits
	.align	1
	.global	__cxa_pure_virtual
	.code	16
	.thumb_func
	.type	__cxa_pure_virtual, %function
__cxa_pure_virtual:
	@ sp needed
	bx	lr
	.size	__cxa_pure_virtual, .-__cxa_pure_virtual
	.global	__dso_handle
	.global	heap_free
	.section	.data.heap_free,"aw",%progbits
	.align	2
	.set	.LANCHOR0,. + 0
	.type	heap_free, %object
	.size	heap_free, 4
heap_free:
	.word	__heap_start
	.section	.bss.__dso_handle,"aw",%nobits
	.align	2
	.type	__dso_handle, %object
	.size	__dso_handle, 4
__dso_handle:
	.space	4
	.section	.vectors,"a",%progbits
	.align	2
	.type	_ZL9__vectors, %object
	.size	_ZL9__vectors, 32
_ZL9__vectors:
	.word	__stack_end
	.word	__startup
	.space	24
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
