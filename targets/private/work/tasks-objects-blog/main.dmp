
main.elf:     file format elf32-littlearm
main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001b1

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000240 memsz 0x00000240 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x00000240 align 2**15
         filesz 0x00000004 memsz 0x00000004 flags rw-
    LOAD off    0x00010008 vaddr 0x10000008 paddr 0x10000008 align 2**15
         filesz 0x00000000 memsz 0x00000818 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000240  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  10000000  00000240  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  10000008  10000008  00010008  2**3
                  ALLOC
  3 .stack        00000804  1000001c  1000001c  00010008  2**0
                  ALLOC
  4 .ARM.attributes 0000002d  00000000  00000000  00010004  2**0
                  CONTENTS, READONLY
  5 .comment      00000070  00000000  00000000  00010031  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10000008 l    d  .bss	00000000 .bss
1000001c l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 bmptk_cortex.c
00000000 l     O .text	00000020 _ZL9__vectors
00000000 l    df *ABS*	00000000 switch_from_to.o
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
00000004 l       *ABS*	00000000 __data_size
10001000 l       *ABS*	00000000 __ram_end
00000240 l       .data	00000000 __exidx_end
00000240 l       .data	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
00001000 l       *ABS*	00000000 __ram_size
00000000 l       .text	00000000 __rom_start
00000800 l       *ABS*	00000000 __main_stack_size
00000230  w    O .text	0000000c _ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE
00000098  w    F .text	00000028 _ZN4task4waitEx
00000044 g     F .text	00000014 _Z10trampolinev
00000000 g       .text	00000000 __text_start
10000820 g       .stack	00000000 __process_stack_end
00000004 g       *ABS*	00000000 __data_init_size
000000c0  w    F .text	0000005c _ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv
00000208 g     F .text	00000028 malloc
10000820 g       .stack	00000000 __process_stack_start
00000240 g       *ABS*	00000000 __data_init_start
10000820 g       .stack	00000000 __main_stack_end
1000001c g       .stack	00000000 __bss_end
00000020 g       .text	00000000 switch_from_to
10000010  w    O .bss	00000004 _ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low
10000020 g       .stack	00000000 __stack_start
10000008  w    O .bss	00000008 _ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high
10000004 g       .bss	00000000 __data_end
000001b0 g     F .text	00000058 __startup
10000820 g       .stack	00000000 __stack_end
00000240 g       .text	00000000 __text_end
10000014 g     O .bss	00000004 trampoline_target_task
10000008 g       .bss	00000000 __bss_start
0000015c g     F .text	00000054 main
00000058 g     F .text	00000040 _Z3nowv
10000018 g     O .bss	00000004 main_sp
10000020 g       .stack	00000000 __main_stack_start
10001000 g       *ABS*	00000000 __heap_end
10000000 g     O .data	00000004 heap_free
10000820 g       .stack	00000000 __heap_start
0000011c g     F .text	00000040 _Z8scheduleSt16initializer_listIP4taskE
10000000 g       .data	00000000 __data_start


