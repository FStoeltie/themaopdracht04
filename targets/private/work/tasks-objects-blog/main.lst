	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"main.cpp"
	.section	.text._Z10trampolinev,"ax",%progbits
	.align	1
	.global	_Z10trampolinev
	.code	16
	.thumb_func
	.type	_Z10trampolinev, %function
_Z10trampolinev:
	push	{r3, lr}
	ldr	r3, .L2
	@ sp needed
	ldr	r0, [r3]
	ldr	r3, [r0]
	ldr	r3, [r3]
	blx	r3
	pop	{r3, pc}
.L3:
	.align	2
.L2:
	.word	.LANCHOR0
	.size	_Z10trampolinev, .-_Z10trampolinev
	.section	.text._Z3nowv,"ax",%progbits
	.align	1
	.global	_Z3nowv
	.code	16
	.thumb_func
	.type	_Z3nowv, %function
_Z3nowv:
	ldr	r3, .L7
	push	{r4, r5, r6, r7, lr}
	ldr	r0, [r3, #8]
	ldr	r3, .L7+4
	mvn	r0, r0
	ldr	r1, [r3]
	lsl	r0, r0, #8
	mov	r2, r3
	lsr	r0, r0, #8
	ldr	r3, .L7+8
	cmp	r0, r1
	bcs	.L5
	ldr	r6, [r3]
	ldr	r7, [r3, #4]
	mov	r4, #128
	mov	r5, #0
	lsl	r4, r4, #17
	add	r4, r4, r6
	adc	r5, r5, r7
	str	r4, [r3]
	str	r5, [r3, #4]
.L5:
	str	r0, [r2]
	ldr	r2, [r3]
	ldr	r1, [r3, #4]
	orr	r0, r2
	@ sp needed
	pop	{r4, r5, r6, r7, pc}
.L8:
	.align	2
.L7:
	.word	-536813552
	.word	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low
	.word	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high
	.size	_Z3nowv, .-_Z3nowv
	.section	.text._Znwj,"ax",%progbits
	.align	1
	.global	_Znwj
	.code	16
	.thumb_func
	.type	_Znwj, %function
_Znwj:
	push	{r3, lr}
	bl	malloc
	@ sp needed
	pop	{r3, pc}
	.size	_Znwj, .-_Znwj
	.section	.text._ZN4task4waitEx,"axG",%progbits,_ZN4task4waitEx,comdat
	.align	1
	.weak	_ZN4task4waitEx
	.code	16
	.thumb_func
	.type	_ZN4task4waitEx, %function
_ZN4task4waitEx:
	push	{r4, r6, r7, lr}
	mov	r4, r0
	mov	r6, r2
	mov	r7, r3
	bl	_Z3nowv
	add	r6, r6, r0
	adc	r7, r7, r1
	mov	r0, r4
	ldr	r3, .L11
	str	r6, [r4, #16]
	str	r7, [r4, #20]
	add	r0, r0, #8
	ldr	r1, [r3]
	bl	switch_from_to
	@ sp needed
	pop	{r4, r6, r7, pc}
.L12:
	.align	2
.L11:
	.word	.LANCHOR1
	.size	_ZN4task4waitEx, .-_ZN4task4waitEx
	.section	.text.startup._ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv,"axG",%progbits,_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv,comdat
	.align	1
	.weak	_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv
	.code	16
	.thumb_func
	.type	_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv, %function
_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv:
	mov	r1, #128
	ldr	r2, .L15
	push	{r3, r4, r5, lr}
	ldr	r3, [r2, #124]
	lsl	r1, r1, #9
	orr	r3, r1
	mov	r1, #7
	mov	r4, r0
	str	r3, [r2, #124]
	ldr	r2, .L15+4
	ldr	r3, [r2]
	bic	r3, r1
	str	r3, [r2]
	ldr	r2, .L15+8
	add	r1, r1, #25
	ldr	r3, [r2]
	orr	r3, r1
	str	r3, [r2]
.L14:
	mov	r3, #1
	ldr	r5, .L15+12
	neg	r3, r3
	str	r3, [r5]
	mov	r0, r4
	ldr	r2, .L15+16
	mov	r3, #0
	bl	_ZN4task4waitEx
	mov	r3, #0
	mov	r0, r4
	str	r3, [r5]
	ldr	r2, .L15+16
	mov	r3, #0
	bl	_ZN4task4waitEx
	b	.L14
.L16:
	.align	2
.L15:
	.word	1074036740
	.word	1074020512
	.word	1342275584
	.word	1342242944
	.word	1800000
	.size	_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv, .-_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv
	.section	.text._Z8scheduleSt16initializer_listIP4taskE,"ax",%progbits
	.align	1
	.global	_Z8scheduleSt16initializer_listIP4taskE
	.code	16
	.thumb_func
	.type	_Z8scheduleSt16initializer_listIP4taskE, %function
_Z8scheduleSt16initializer_listIP4taskE:
	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	mov	r5, r0
	str	r0, [sp]
	str	r1, [sp, #4]
.L22:
	mov	r7, r5
	ldr	r3, [sp, #4]
	lsl	r4, r3, #2
	add	r4, r5, r4
.L18:
	cmp	r7, r4
	beq	.L22
	ldmia	r7!, {r6}
	bl	_Z3nowv
	ldr	r3, [r6, #20]
	cmp	r3, r1
	bgt	.L18
	bne	.L23
	ldr	r3, [r6, #16]
	cmp	r3, r0
	bhi	.L18
.L23:
	ldr	r3, .L24
	ldr	r0, .L24+4
	ldr	r1, [r6, #8]
	str	r6, [r3]
	bl	switch_from_to
	b	.L22
.L25:
	.align	2
.L24:
	.word	.LANCHOR0
	.word	.LANCHOR1
	.size	_Z8scheduleSt16initializer_listIP4taskE, .-_Z8scheduleSt16initializer_listIP4taskE
	.section	.text._Z4waitx,"ax",%progbits
	.align	1
	.global	_Z4waitx
	.code	16
	.thumb_func
	.type	_Z4waitx, %function
_Z4waitx:
	push	{r3, lr}
	mov	r3, r1
	ldr	r1, .L27
	mov	r2, r0
	ldr	r0, [r1]
	bl	_ZN4task4waitEx
	@ sp needed
	pop	{r3, pc}
.L28:
	.align	2
.L27:
	.word	.LANCHOR0
	.size	_Z4waitx, .-_Z4waitx
	.section	.text.startup.main,"ax",%progbits
	.align	1
	.global	main
	.code	16
	.thumb_func
	.type	main, %function
main:
	push	{r4, r5, lr}
	mov	r2, #0
	mov	r5, #1
	ldr	r3, .L30
	ldr	r1, .L30+4
	str	r2, [r3]
	sub	sp, sp, #20
	str	r1, [r3, #4]
	mov	r0, #24
	str	r2, [r3, #8]
	str	r5, [r3]
	bl	malloc
	mov	r4, r0
	mov	r0, #80
	bl	malloc
	ldr	r3, .L30+8
	mov	r2, #0
	str	r3, [r0, #76]
	mov	r3, #0
	str	r0, [r4, #4]
	str	r2, [r4, #16]
	str	r3, [r4, #20]
	add	r0, r0, #40
	ldr	r3, .L30+12
	str	r0, [r4, #8]
	mov	r1, r5
	add	r0, sp, #4
	str	r3, [r4]
	str	r4, [sp, #4]
	bl	_Z8scheduleSt16initializer_listIP4taskE
.L31:
	.align	2
.L30:
	.word	-536813552
	.word	16777215
	.word	_Z10trampolinev
	.word	_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE+8
	.size	main, .-main
	.weak	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high
	.section	.bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high,"awG",%nobits,_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high,comdat
	.align	3
	.type	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high, %object
	.size	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high, 8
_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE4high:
	.space	8
	.weak	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low
	.section	.bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low,"awG",%nobits,_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low,comdat
	.align	2
	.type	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low, %object
	.size	_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low, 4
_ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE8timer_643nowEvE8last_low:
	.space	4
	.weak	_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE
	.section	.rodata._ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE,"aG",%progbits,_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE,comdat
	.align	3
	.type	_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE, %object
	.size	_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE, 12
_ZTV5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE:
	.word	0
	.word	0
	.word	_ZN5blinkIN5hwcpp12lpc1114_baseILi4096ELi32768ELi12000000EE17pin_in_out_pullupILi1ELi5EEELx1800000ELi20EE4mainEv
	.global	trampoline_target_task
	.global	main_sp
	.weak	_ZN5hwcpp2io4coutE
	.section	.data._ZN5hwcpp2io4coutE,"aw",%progbits
	.align	2
	.type	_ZN5hwcpp2io4coutE, %object
	.size	_ZN5hwcpp2io4coutE, 20
_ZN5hwcpp2io4coutE:
	.word	0
	.word	10
	.byte	32
	.byte	65
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.space	2
	.word	0
	.section	.bss.trampoline_target_task,"aw",%nobits
	.align	2
	.set	.LANCHOR0,. + 0
	.type	trampoline_target_task, %object
	.size	trampoline_target_task, 4
trampoline_target_task:
	.space	4
	.section	.bss.main_sp,"aw",%nobits
	.align	2
	.set	.LANCHOR1,. + 0
	.type	main_sp, %object
	.size	main_sp, 4
main_sp:
	.space	4
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
