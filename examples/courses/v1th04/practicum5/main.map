Archive member included because of file (symbol)

c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)
                              sw-uart.o (__aeabi_idiv)

Allocating common symbols
Common symbol       size              file

__dso_handle        0x4               bmptk_cortex.o
DS_pin              0x4               75HC595.o
STCP_pin            0x4               75HC595.o
SHCP_pin            0x4               75HC595.o
active_test2        0x4               main.o
port                0x4               75HC595.o

Discarded input sections

 .text          0x00000000        0x0 pins.o
 .data          0x00000000        0x0 pins.o
 .bss           0x00000000        0x0 pins.o
 .text.pin_configure_as_input
                0x00000000       0x34 pins.o
 .rodata.bmptk_version
                0x00000000        0xe pins.o
 .text          0x00000000        0x0 routines.o
 .data          0x00000000        0x0 routines.o
 .bss           0x00000000        0x0 routines.o
 .text          0x00000000        0x0 sw-uart.o
 .data          0x00000000        0x0 sw-uart.o
 .bss           0x00000000        0x0 sw-uart.o
 .text.uart_put_int_decimal
                0x00000000       0x4c sw-uart.o
 .text.uart_put_int_hexadecimal_digit
                0x00000000       0x16 sw-uart.o
 .text.uart_put_int_hexadecimal
                0x00000000       0x1c sw-uart.o
 .rodata.str1.1
                0x00000000        0xc sw-uart.o
 .rodata.bmptk_version
                0x00000000        0xe sw-uart.o
 .text          0x00000000        0x0 timer.o
 .data          0x00000000        0x0 timer.o
 .bss           0x00000000        0x0 timer.o
 .rodata.bmptk_version
                0x00000000        0xe timer.o
 .text          0x00000000        0x0 servo.o
 .data          0x00000000        0x0 servo.o
 .bss           0x00000000        0x0 servo.o
 .text.servo_init
                0x00000000       0x16 servo.o
 .text.servo_pulse
                0x00000000       0x98 servo.o
 .rodata.bmptk_version
                0x00000000        0xe servo.o
 .text          0x00000000        0x0 75HC595.o
 .data          0x00000000        0x0 75HC595.o
 .bss           0x00000000        0x0 75HC595.o
 .rodata.bmptk_version
                0x00000000        0xe 75HC595.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .data.delaytime
                0x00000000        0x4 main.o
 .data.delay_time
                0x00000000        0x4 main.o
 .rodata.bmptk_version
                0x00000000        0xe main.o
 COMMON         0x00000000        0x4 main.o
 .text          0x00000000        0x0 bmptk_cortex.o
 .data          0x00000000        0x0 bmptk_cortex.o
 .bss           0x00000000        0x0 bmptk_cortex.o
 .text.__cxa_pure_virtual
                0x00000000        0x2 bmptk_cortex.o
 COMMON         0x00000000        0x4 bmptk_cortex.o
 .text          0x00000000        0x0 bmptk_interface.o
 .data          0x00000000        0x0 bmptk_interface.o
 .bss           0x00000000        0x0 bmptk_interface.o
 .text.malloc   0x00000000       0x24 bmptk_interface.o
 .text.free     0x00000000        0x8 bmptk_interface.o
 .data._last_free
                0x00000000        0x4 bmptk_interface.o
 .rodata.bmptk_version
                0x00000000        0xe bmptk_interface.o
 .data._first_free
                0x00000000        0x4 bmptk_interface.o
 .data          0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)
 .bss           0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)

Memory Configuration

Name             Origin             Length             Attributes
rom              0x00000000         0x00008000         xr
ram              0x10000000         0x00001000         xrw
nul              0x20000000         0x00000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD pins.o
LOAD routines.o
LOAD sw-uart.o
LOAD timer.o
LOAD servo.o
LOAD 75HC595.o
LOAD main.o
LOAD bmptk_cortex.o
LOAD bmptk_interface.o
LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a
START GROUP
LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libc.a
END GROUP
                0x00000400                __main_stack_size = 0x400
                0x00000000                __process_stack_size = 0x0
                [0x00000400]                PROVIDE (__main_stack_size, __main_stack_size)
                [0x00000000]                PROVIDE (__process_stack_size, __process_stack_size)
                0x00000000                __rom_start = ORIGIN (rom)
                0x00008000                __rom_size = 0x8000
                0x00008000                __rom_end = (__rom_start + __rom_size)
                0x10000000                __ram_start = ORIGIN (ram)
                0x00001000                __ram_size = 0x1000
                0x10001000                __ram_end = (__ram_start + __ram_size)
                [0x00000000]                PROVIDE (__rom_start, __rom_start)
                [0x00008000]                PROVIDE (__rom_size, __rom_size)
                [0x00008000]                PROVIDE (__rom_end, __rom_end)
                [0x10000000]                PROVIDE (__ram_start, __ram_start)
                [0x00001000]                PROVIDE (__ram_size, __ram_size)
                [0x10001000]                PROVIDE (__ram_end, __ram_end)

.text           0x00000000      0x80c
                0x00000000                . = ALIGN (0x4)
                0x00000000                __text_start = .
                [0x00000000]                PROVIDE (__text_start, __text_start)
                0x00000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x00000000       0x20 bmptk_cortex.o
                0x00000000                __vectors
                0x00000020                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text.pin_configure_as_output
                0x00000020       0x34 pins.o
                0x00000020                pin_configure_as_output
 .text.pin_set  0x00000054       0x50 pins.o
                0x00000054                pin_set
 .text.pin_get  0x000000a4       0x38 pins.o
                0x000000a4                pin_get
 .text.txd_low  0x000000dc       0x18 sw-uart.o
                0x000000dc                txd_low
 .text.txd_high
                0x000000f4       0x18 sw-uart.o
                0x000000f4                txd_high
 .text.uart_init
                0x0000010c       0x1c sw-uart.o
                0x0000010c                uart_init
 .text.uart_put_char
                0x00000128       0x48 sw-uart.o
                0x00000128                uart_put_char
 .text.uart_put_string
                0x00000170       0x14 sw-uart.o
                0x00000170                uart_put_string
 .text.timer_init
                0x00000184       0x28 timer.o
                0x00000184                timer_init
 .text.now      0x000001ac        0xc timer.o
                0x000001ac                now
 .text.await    0x000001b8       0x10 timer.o
                0x000001b8                await
 .text.delay    0x000001c8       0x14 timer.o
                0x000001c8                delay
 .text.get_timer
                0x000001dc       0x14 timer.o
                0x000001dc                get_timer
 .text.timer_activate
                0x000001f0        0xc timer.o
                0x000001f0                timer_activate
 .text.timer_count
                0x000001fc       0x38 timer.o
                0x000001fc                timer_count
 .text.configure_pin_layout
                0x00000234       0x38 75HC595.o
                0x00000234                configure_pin_layout
 .text.write_registers
                0x0000026c       0x80 75HC595.o
                0x0000026c                write_registers
 .text.read_one_key
                0x000002ec       0x50 main.o
                0x000002ec                read_one_key
 .text.keypad_read
                0x0000033c       0xae main.o
                0x0000033c                keypad_read
 *fill*         0x000003ea        0x2 
 .text.set_bomb
                0x000003ec       0x2c main.o
                0x000003ec                set_bomb
 .text.bomb_tick
                0x00000418       0x28 main.o
                0x00000418                bomb_tick
 .text.set_digit
                0x00000440       0x38 main.o
                0x00000440                set_digit
 .text.beep_swap
                0x00000478        0xe main.o
                0x00000478                beep_swap
 *fill*         0x00000486        0x2 
 .text.count    0x00000488      0x1fc main.o
                0x00000488                count
 .text.spi_test
                0x00000684       0x50 main.o
                0x00000684                spi_test
 .text.startup.main
                0x000006d4        0x6 main.o
                0x000006d4                main
 *fill*         0x000006da        0x2 
 .text.__startup
                0x000006dc       0x54 bmptk_cortex.o
                0x000006dc                __startup
 .text.__aeabi_idiv0
                0x00000730        0x4 bmptk_cortex.o
                0x00000730                __aeabi_idiv0
 .text          0x00000734       0xc0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)
                0x00000734                __divsi3
                0x00000734                __aeabi_idiv
                0x000007e0                __aeabi_idivmod
                0x000007f4                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
                0x000007f4                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x000007f4       0x15 main.o
                0x0000080c                . = ALIGN (0x4)
 *fill*         0x00000809        0x3 
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000080c                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x0000080c                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x0000080c                . = ALIGN (0x4)
 *(.eh_frame)
                0x0000080c                . = ALIGN (0x4)
                0x0000080c                __text_end = .
                [0x0000080c]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x0000080c        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x0000080c        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x0000080c        0x0
 .iplt          0x00000000        0x0 pins.o

.rel.dyn        0x0000080c        0x0
 .rel.iplt      0x00000000        0x0 pins.o

.IF_YOU_SEE_THIS_YOU_HAVE_ONE_OR_MORE_GLOBAL_OBJECT_CONSTRUCTORS
 *(.init)
 *(.preinit_array)
 *(SORT(.init_array.*))
 *(.init_array)
                0x0000080c                . = ALIGN (0x4)
                0x0000080c                __exidx_start = .
                [0x0000080c]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x0000080c                . = ALIGN (0x4)
                0x0000080c                __exidx_end = .
                [0x0000080c]                PROVIDE (__exidx_end, __exidx_end)

.data           0x10000000        0xc load address 0x0000080c
                0x10000000                . = ALIGN (0x4)
                0x0000080c                __data_init_start = LOADADDR (.data)
                [0x0000080c]                PROVIDE (__data_init_start, __data_init_start)
                0x10000000                __data_start = .
                [0x10000000]                PROVIDE (__data_start, __data_start)
                0x10000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
 .data.numbers  0x10000000        0xa main.o
                0x10000000                numbers
                0x1000000c                . = ALIGN (0x4)
 *fill*         0x1000000a        0x2 
                0x1000000c                __data_end = .
                [0x1000000c]                PROVIDE (__data_end, __data_end)
                0x0000080c                __data_init_end = LOADADDR (.data)
                [0x0000080c]                PROVIDE (__data_init_end, __data_init_end)

.igot.plt       0x1000000c        0x0 load address 0x00000818
 .igot.plt      0x00000000        0x0 pins.o

.bss            0x1000000c       0x5c
                0x1000000c                . = ALIGN (0x4)
                0x1000000c                __bss_start = .
                [0x1000000c]                PROVIDE (__bss_start, __bss_start)
                0x1000000c                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss.PIN_CONFIGURATION_ERROR
                0x1000000c        0x4 pins.o
                0x1000000c                PIN_CONFIGURATION_ERROR
 .bss.old_time.4650
                0x10000010        0x4 timer.o
 .bss.array_size
                0x10000014       0x28 timer.o
                0x10000014                array_size
 .bss.old_not_set
                0x1000003c        0x1 main.o
                0x1000003c                old_not_set
 *fill*         0x1000003d        0x3 
 .bss.bomb_i    0x10000040        0x4 main.o
                0x10000040                bomb_i
 .bss.bomb_j    0x10000044        0x4 main.o
                0x10000044                bomb_j
 .bss.c_countdown
                0x10000048        0x4 main.o
                0x10000048                c_countdown
 .bss.rray      0x1000004c        0x2 main.o
                0x1000004c                rray
 .bss.active_button
                0x1000004e        0x1 main.o
                0x1000004e                active_button
 *fill*         0x1000004f        0x1 
 .bss.active_test
                0x10000050        0x4 main.o
                0x10000050                active_test
 .bss.setting_bomb
                0x10000054        0x1 main.o
                0x10000054                setting_bomb
                0x10000058                . = ALIGN (0x4)
 *fill*         0x10000055        0x3 
 *(COMMON)
 COMMON         0x10000058       0x10 75HC595.o
                0x10000058                DS_pin
                0x1000005c                STCP_pin
                0x10000060                SHCP_pin
                0x10000064                port
                0x10000068                . = ALIGN (0x4)
                0x10000068                __bss_end = .
                [0x10000068]                PROVIDE (__bss_end, __bss_end)

.stack          0x10000068      0x400
                0x10000068                . = ALIGN (0x8)
                0x10000068                __stack_start = .
                [0x10000068]                PROVIDE (__stack_start, __stack_start)
                0x10000068                . = ALIGN (0x8)
                0x10000068                __main_stack_start = .
                [0x10000068]                PROVIDE (__main_stack_start, __main_stack_start)
                0x10000468                . = (. + __main_stack_size)
 *fill*         0x10000068      0x400 
                0x10000468                . = ALIGN (0x8)
                0x10000468                __main_stack_end = .
                [0x10000468]                PROVIDE (__main_stack_end, __main_stack_end)
                0x10000468                . = ALIGN (0x8)
                0x10000468                __process_stack_start = .
                [0x10000468]                PROVIDE (__process_stack_start, __process_stack_start)
                0x10000468                . = (. + __process_stack_size)
                0x10000468                . = ALIGN (0x8)
                0x10000468                __process_stack_end = .
                [0x10000468]                PROVIDE (__process_stack_end, __process_stack_end)
                0x10000468                . = ALIGN (0x8)
                0x10000468                __stack_end = .
                [0x10000468]                PROVIDE (__stack_end, __stack_end)
                0x10000468                . = ALIGN (0x4)
                0x10000468                __heap_start = .
                [0x10000468]                PROVIDE (__heap_start, __heap_start)
                0x10000468                . = ALIGN (0x4)
                0x10001000                __heap_end = __ram_end
                [0x10001000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame    0x00000000       0x20
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 pins.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 routines.o
 .comment       0x00000000       0x71 sw-uart.o
 .comment       0x00000000       0x71 timer.o
 .comment       0x00000000       0x71 servo.o
 .comment       0x00000000       0x71 75HC595.o
 .comment       0x00000000       0x71 main.o
 .comment       0x00000000       0x71 bmptk_cortex.o
 .comment       0x00000000       0x71 bmptk_interface.o

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x31
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x31 pins.o
 .ARM.attributes
                0x00000031       0x31 routines.o
 .ARM.attributes
                0x00000062       0x31 sw-uart.o
 .ARM.attributes
                0x00000093       0x31 timer.o
 .ARM.attributes
                0x000000c4       0x31 servo.o
 .ARM.attributes
                0x000000f5       0x31 75HC595.o
 .ARM.attributes
                0x00000126       0x31 main.o
 .ARM.attributes
                0x00000157       0x31 bmptk_cortex.o
 .ARM.attributes
                0x00000188       0x31 bmptk_interface.o
 .ARM.attributes
                0x000001b9       0x1e c:/program files (x86)/gnu tools arm embedded/4.9 2015q1/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_divsi3.o)

/DISCARD/
 *(.note.GNU-stack)
                0x0000080c                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x0000000c                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000000                PROVIDE (__data_init_size, (__data_init_end - __data_init_start))
                0x0000005c                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00000b98                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(main.elf elf32-littlearm)
